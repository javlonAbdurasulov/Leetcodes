namespace Leetcodes
{
    internal class Program
    {
        static void Main(string[] args)
        {

            //RomanToInts
            //Console.WriteLine(RomanToInts.RomanToInt("XIII"));

            //LongestCommonPrefixs
            //string[] strings = { "flower", "flow", "flight" };
            //Console.WriteLine(LongestCommonPrefixs.LongestCommonPrefix(strings));

            //IsValid
            //Console.WriteLine(IsValidSkobki.IsValid("]"));
            //////////////////////////////////////
            //Mutex.Run();

            ////////////////////////////////////////////
            //Задача "Сумма элементов массива":
            //Создайте массив случайных чисел и разделите его на несколько частей. Затем создайте несколько потоков, 
            //каждый из которых будет вычислять сумму своей части массива, и затем суммируйте полученные результаты. Проверьте правильность результата.

            //int[] ints = new int[24];
            //Random random = new Random();
            //for (int i = 0; i < ints.Length; i++)
            //{
            //    ints[i] = random.Next(0,10);
            //}
            //Potok.SumMassiv(ints);
            //foreach (int i in ints) {
            //    Console.WriteLine(i+" ");
            //}


            //Задача "Очередь задач":
            //
            //Реализуйте простую очередь задач(например, с использованием списка). Создайте несколько потоков, которы
            //е будут извлекать задачи из очереди и выполнять их.Задачи могут быть просто функциями, которые выводят на экран
            //свой номер или выполняют другую простую операцию.Добавляйте задачи в очередь из основного потока и ждите, пока все задачи завершатся.
            




            //Задача "Производитель-Потребитель":
            //
            //Создайте два типа потоков: производители и потребители.Производители будут генерировать данные(например
            //, случайные числа) и помещать их в разделяемый буфер(например, список или очередь). Потребители будут извлекать данные
            //из буфера и обрабатывать их(например, выводить на экран).Обеспечьте синхронизацию так, чтобы производители не помещали
            //данные в полностью заполненный буфер, и потребители не извлекали данные из пустого буфера.



        }

    }
}